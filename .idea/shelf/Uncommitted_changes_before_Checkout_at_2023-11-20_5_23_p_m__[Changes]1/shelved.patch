Index: src/data_access/FileUserDataAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\r\nimport use_case.UserDataAccessInterface;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.Arrays;\r\nimport java.util.Collection;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.util.ArrayList;\r\n\r\npublic class FileUserDataAccessObject implements UserDataAccessInterface {\r\n    private String filepath;\r\n    public FileUserDataAccessObject(String filepath){\r\n        this.filepath = filepath;\r\n    }\r\n\r\n    //need initializer here, we shouldn't be stating filepath everytime we call a function, not CA.\r\n    public void writeToCSV(ArrayList<ArrayList<String>> data){\r\n        try(BufferedWriter writer = new BufferedWriter(new FileWriter(filepath))){\r\n            writer.newLine();\r\n            for (ArrayList<String> Arr : data){\r\n                for (String d : Arr){\r\n                    writer.write(d + \",\");\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public ArrayList<ArrayList<String>> readToCSV(String filePath) {\r\n        ArrayList<ArrayList<String>> records = new ArrayList<>();\r\n        try (BufferedReader br = new BufferedReader(new FileReader(filepath))) {\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                ArrayList<String> values = new ArrayList<>(Arrays.asList(line.split(\",\")));\r\n                records.add(values);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return records;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/data_access/FileUserDataAccessObject.java b/src/data_access/FileUserDataAccessObject.java
--- a/src/data_access/FileUserDataAccessObject.java	
+++ b/src/data_access/FileUserDataAccessObject.java	
@@ -31,6 +31,17 @@
         }
     }
 
+    public void writeToCSVAL(ArrayList<String> data){
+        try(BufferedWriter writer = new BufferedWriter(new FileWriter(filepath))){
+            writer.newLine();
+            for (String s : data){
+                writer.write(s + ",");
+            }
+        } catch (IOException e) {
+            throw new RuntimeException(e);
+        }
+    }
+
     @Override
     public ArrayList<ArrayList<String>> readToCSV(String filePath) {
         ArrayList<ArrayList<String>> records = new ArrayList<>();
@@ -46,5 +57,6 @@
         return records;
     }
 
+
 }
 
Index: src/data_access/FoodDataAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\r\n\r\nimport use_case.add_food.FoodAddDataAccessInterface;\r\n\r\nimport java.io.*;\r\n\r\npublic class FoodDataAccessObject implements FoodAddDataAccessInterface {\r\n    private final String csvFilePath;\r\n\r\n    public FoodDataAccessObject(String csvFilePath) {\r\n        this.csvFilePath = csvFilePath;\r\n    }\r\n\r\n    @Override\r\n    public boolean existByName(String foodName) {\r\n        // Implementation to check if the food exists in the CSV file\r\n        try (BufferedReader br = new BufferedReader(new FileReader(csvFilePath))) {\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                String[] values = line.split(\",\");\r\n                if (values[0].equalsIgnoreCase(foodName)) {\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public int getCalorie(String foodName, float amount) {\r\n        // Implementation to get the calories for the specified amount of food\r\n        try (BufferedReader br = new BufferedReader(new FileReader(csvFilePath))) {\r\n            String line;\r\n            while ((line = br.readLine()) != null) {\r\n                String[] values = line.split(\",\");\r\n                if (values[0].equalsIgnoreCase(foodName)) {\r\n                    float caloriesPerUnit = Float.parseFloat(values[1]); // Assuming the second value is the calories per unit\r\n                    return Math.round(caloriesPerUnit * amount);\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public String fetchDataFromNutritionix(String query) {\r\n        // Call NutritionixAPICaller\r\n        return NutritionixAPICaller.fetchData(query);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/data_access/FoodDataAccessObject.java b/src/data_access/FoodDataAccessObject.java
--- a/src/data_access/FoodDataAccessObject.java	
+++ b/src/data_access/FoodDataAccessObject.java	
@@ -48,7 +48,7 @@
 
     public String fetchDataFromNutritionix(String query) {
         // Call NutritionixAPICaller
-        return NutritionixAPICaller.fetchData(query);
+        return NutritionixAPICaller.fetchDataFood(query);
     }
 
 }
Index: data/sample_user.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>user name,gender ,age,weight(kg),height(cm),history\r\nAmy,female,24,56,168,\r\nTom,male,18,72,179,\r\nSam,prefer not to say,33,80,182,
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/sample_user.csv b/data/sample_user.csv
--- a/data/sample_user.csv	
+++ b/data/sample_user.csv	
@@ -1,4 +1,2 @@
-user name,gender ,age,weight(kg),height(cm),history
-Amy,female,24,56,168,
-Tom,male,18,72,179,
-Sam,prefer not to say,33,80,182,
\ No newline at end of file
+
+,,,,,,ï»¿user name,gender ,age,weight(kg),height(cm),history,Amy,female,24,56,168,Tom,male,18,72,179,Sam,prefer not to say,33,80,182,
\ No newline at end of file
Index: src/app/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app;\r\n\r\nimport data_access.FileUserDataAccessObject;\r\nimport data_access.FoodDataAccessObject;\r\nimport interface_adapter.AddExercise.AddExerciseViewModel;\r\nimport interface_adapter.AddFood.AddFoodViewModel;\r\nimport view.FoodView;\r\nimport view.MainFrame;\r\n\r\nimport javax.swing.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n\r\n        AddFoodViewModel addFoodViewModel = new AddFoodViewModel();\r\n        AddExerciseViewModel addExerciseViewModel = new AddExerciseViewModel();\r\n\r\n        FileUserDataAccessObject userDataAccessObject = null; // = null for now\r\n       /* try{\r\n            userDataAccessObject = new FileUserDataAccessObject(\"./data/sample_user.csv\");\r\n            // userDataAccessObject = new FileUserDataAccessObject(\"./data/sample_user.csv\", new )          fix fileuserdataacccessobject\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }*/\r\n\r\n        FoodDataAccessObject foodDataAccessObject = new FoodDataAccessObject(\"./data/sample_user.csv\");\r\n        String query = \"ran 3 miles\";\r\n        String responseData = foodDataAccessObject.fetchDataFromNutritionix(query);\r\n        System.out.println(responseData);\r\n\r\n        /*try{\r\n            foodDataAccessObject = new FoodDataAccessObject(\"./data/sample_user.csv\");\r\n        } catch (IOException e) {           //fix both\r\n            throw new RuntimeException(e);\r\n        }*/\r\n\r\n\r\n        FileUserDataAccessObject finalUserDataAccessObject = userDataAccessObject;\r\n        FoodDataAccessObject finalFoodDataAccessObject = foodDataAccessObject;\r\n        SwingUtilities.invokeLater(() -> {\r\n            //Main window\r\n            JFrame application = new MainFrame(addFoodViewModel, finalUserDataAccessObject, finalFoodDataAccessObject);\r\n            application.setVisible(true);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/Main.java b/src/app/Main.java
--- a/src/app/Main.java	
+++ b/src/app/Main.java	
@@ -20,18 +20,18 @@
         AddExerciseViewModel addExerciseViewModel = new AddExerciseViewModel();
 
         FileUserDataAccessObject userDataAccessObject = null; // = null for now
-       /* try{
-            userDataAccessObject = new FileUserDataAccessObject("./data/sample_user.csv");
-            // userDataAccessObject = new FileUserDataAccessObject("./data/sample_user.csv", new )          fix fileuserdataacccessobject
-        } catch (IOException e) {
-            throw new RuntimeException(e);
-        }*/
+        userDataAccessObject = new FileUserDataAccessObject("./data/sample_user.csv");
+        // userDataAccessObject = new FileUserDataAccessObject("./data/sample_user.csv", new )          fix fileuserdataacccessobject
 
         FoodDataAccessObject foodDataAccessObject = new FoodDataAccessObject("./data/sample_user.csv");
         String query = "ran 3 miles";
         String responseData = foodDataAccessObject.fetchDataFromNutritionix(query);
         System.out.println(responseData);
 
+        String query1 = "egg 50g";
+        String responseData1 = foodDataAccessObject.fetchDataFromNutritionix(query1);
+        System.out.println(responseData1);
+
         /*try{
             foodDataAccessObject = new FoodDataAccessObject("./data/sample_user.csv");
         } catch (IOException e) {           //fix both
Index: src/use_case/add_food/AddFoodInteractor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package use_case.add_food;\r\n\r\nimport data_access.FileUserDataAccessObject;\r\nimport data_access.FoodDataAccessObject;\r\nimport data_access.NutritionixAPICaller;\r\nimport use_case.UserDataAccessInterface;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\n\r\npublic class AddFoodInteractor implements AddFoodInputBoundary{\r\n\r\n    final FoodAddDataAccessInterface foodDataAccessObject;\r\n\r\n    final UserDataAccessInterface fileUserDataAccessObject;\r\n    final AddFoodOutputBoundary addFoodOutputBoundary;\r\n\r\n\r\n    public AddFoodInteractor(FoodAddDataAccessInterface foodDataAccessObject, AddFoodOutputBoundary addFoodOutputBoundary, UserDataAccessInterface fileUserDataAccessObject) {\r\n        this.foodDataAccessObject = foodDataAccessObject;\r\n        this.addFoodOutputBoundary = addFoodOutputBoundary;\r\n        this.fileUserDataAccessObject = fileUserDataAccessObject;\r\n    }\r\n\r\n    //read from FoodDataAccessObject which calls api and return something, and write the fileuserdataaccessobject which store user info\r\n    @Override\r\n    public void execute(AddFoodInputData inputData) {\r\n        String query = inputData.getName();\r\n        String apiData = foodDataAccessObject.fetchDataFromNutritionix(query);\r\n        //first get data from reading the csv\r\n        ArrayList<ArrayList<String>> records = fileUserDataAccessObject.readToCSV(\"/data/sample_user.csv\");\r\n        fileUserDataAccessObject.writeToCSV(records);\r\n\r\n    }\r\n}\r\n\r\n\r\n// if (foodDataAccessObject.existByName(food)){\r\n//         addFoodPresenter.prepareFailView(\"Food Already Exist\");\r\n//         }\r\n//         else {\r\n//         ArrayList<String> foodSpecifications = new ArrayList<>();\r\n//        foodSpecifications.add(food);\r\n//        //then write to csv\r\n//        fileUserDataAccessObject.writeToCSV(\"/data/sample_user.csv\",foodSpecifications);\r\n//\r\n////        f = new JFrame();\r\n////        JOptionPane.showMessageDialog(f, \"Success\");\r\n//        addFoodPresenter.prepareSuccessView(foodOutputData);\r\n//\r\n//        }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/use_case/add_food/AddFoodInteractor.java b/src/use_case/add_food/AddFoodInteractor.java
--- a/src/use_case/add_food/AddFoodInteractor.java	
+++ b/src/use_case/add_food/AddFoodInteractor.java	
@@ -1,18 +1,16 @@
 package use_case.add_food;
 
 import data_access.FileUserDataAccessObject;
-import data_access.FoodDataAccessObject;
-import data_access.NutritionixAPICaller;
 import use_case.UserDataAccessInterface;
 
-import java.io.IOException;
+
 import java.util.ArrayList;
 
 public class AddFoodInteractor implements AddFoodInputBoundary{
 
     final FoodAddDataAccessInterface foodDataAccessObject;
 
-    final UserDataAccessInterface fileUserDataAccessObject;
+    UserDataAccessInterface fileUserDataAccessObject;
     final AddFoodOutputBoundary addFoodOutputBoundary;
 
 
@@ -27,10 +25,20 @@
     public void execute(AddFoodInputData inputData) {
         String query = inputData.getName();
         String apiData = foodDataAccessObject.fetchDataFromNutritionix(query);
+        //System.out.println(apiData);
+//        String[] parts = apiData.split(",");
+//        String calories = parts[4];
+//        String name = parts[9];
+//        ArrayList<String> essentialData = new ArrayList<>();
+//        essentialData.add(calories);
+//        essentialData.add(name);
+
         //first get data from reading the csv
-        ArrayList<ArrayList<String>> records = fileUserDataAccessObject.readToCSV("/data/sample_user.csv");
+        ArrayList<ArrayList<String>> records = fileUserDataAccessObject.readToCSV("./data/sample_user.csv");
+        //Initiating file path
+        fileUserDataAccessObject = new FileUserDataAccessObject("./data/sample_user.csv");
         fileUserDataAccessObject.writeToCSV(records);
-
+//        fileUserDataAccessObject.writeToCSVAL(essentialData);
     }
 }
 
Index: src/data_access/NutritionixAPICaller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\npublic class NutritionixAPICaller {\r\n    private static final String API_ENDPOINT = \"https://trackapi.nutritionix.com/v2/natural/exercise\";\r\n    private static final String API_KEY = \"36950e27031466b64fcd4d0a977d6953\";\r\n\r\n    public static String fetchData(String query){\r\n        try {\r\n            URL url = new URL(API_ENDPOINT);\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n\r\n            connection.setRequestMethod(\"POST\");\r\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            connection.setRequestProperty(\"x-app-id\", \"80e22ff8\");\r\n            connection.setRequestProperty(\"x-app-key\", API_KEY);\r\n\r\n            // Set input and output streams to true\r\n            connection.setDoOutput(true);\r\n            connection.setDoInput(true);\r\n\r\n            // Set the request body\r\n            String requestBody = \"{ \\\"query\\\": \\\"\" + query + \"\\\" }\";\r\n            connection.getOutputStream().write(requestBody.getBytes(\"UTF-8\"));\r\n\r\n            int responseCode = connection.getResponseCode();\r\n            System.out.println(\"Response Code : \" + responseCode);\r\n\r\n            if (responseCode == HttpURLConnection.HTTP_OK) {\r\n                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n                String inputLine;\r\n                StringBuilder response = new StringBuilder();\r\n\r\n                while ((inputLine = in.readLine()) != null) {\r\n                    response.append(inputLine);\r\n                }\r\n                in.close();\r\n\r\n                // Return the response as a string\r\n                return response.toString();\r\n            } else {\r\n                System.out.println(\"GET request not worked\");\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // Return null in case of an error\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/data_access/NutritionixAPICaller.java b/src/data_access/NutritionixAPICaller.java
--- a/src/data_access/NutritionixAPICaller.java	
+++ b/src/data_access/NutritionixAPICaller.java	
@@ -5,12 +5,59 @@
 import java.net.URL;
 
 public class NutritionixAPICaller {
-    private static final String API_ENDPOINT = "https://trackapi.nutritionix.com/v2/natural/exercise";
+    private static final String API_ENDPOINT_EXERCISE = "https://trackapi.nutritionix.com/v2/natural/nutrients";
+
+    private static final String API_ENDPOINT_FOOD = "https://trackapi.nutritionix.com/v2/natural/instant";
+
     private static final String API_KEY = "36950e27031466b64fcd4d0a977d6953";
 
-    public static String fetchData(String query){
+    public static String fetchDataExcercise(String query){
         try {
-            URL url = new URL(API_ENDPOINT);
+            URL url = new URL(API_ENDPOINT_EXERCISE);
+            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+
+            connection.setRequestMethod("POST");
+            connection.setRequestProperty("Content-Type", "application/json");
+            connection.setRequestProperty("x-app-id", "80e22ff8");
+            connection.setRequestProperty("x-app-key", API_KEY);
+
+            // Set input and output streams to true
+            connection.setDoOutput(true);
+            connection.setDoInput(true);
+
+            // Set the request body
+            String requestBody = "{ \"query\": \"" + query + "\" }";
+            connection.getOutputStream().write(requestBody.getBytes("UTF-8"));
+
+            int responseCode = connection.getResponseCode();
+            System.out.println("Response Code : " + responseCode);
+
+            if (responseCode == HttpURLConnection.HTTP_OK) {
+                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
+                String inputLine;
+                StringBuilder response = new StringBuilder();
+
+                while ((inputLine = in.readLine()) != null) {
+                    response.append(inputLine);
+                }
+                in.close();
+
+                // Return the response as a string
+                return response.toString();
+            } else {
+                System.out.println("GET request not worked");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        // Return null in case of an error
+        return null;
+    }
+
+    public static String fetchDataFood(String query){
+        try {
+            URL url = new URL(API_ENDPOINT_FOOD);
             HttpURLConnection connection = (HttpURLConnection) url.openConnection();
 
             connection.setRequestMethod("POST");
